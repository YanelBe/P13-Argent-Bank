swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "2.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: View all transactions for the current month
      description: View all transactions grouped by account for the specified month. If no month is specified, transactions for the current month are returned
      parameters:
      - in: query
        name: month
        required: false
        type: string
        description: The month for which to get transactions, in YYYY-MM. Current month is used by default
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Request
        '500':
          description: Internal Server Error
  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: View transaction details
      description: View details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction to retrieve
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Add a transaction
      description: API for adding a transaction.
      parameters:
        - in: body
          name: body
          description: Transaction information
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction added successfully
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update a transaction
      description: API for updating information on a transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction to update
        - in: body
          name: body
          description: Updated transaction information
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid input
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete a transaction
      description: API for deleting a transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction to delete
      produces:
        - application/json
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction unique ID
      date:
        type: string
        format: date
        description: Transaction date
      amount:
        type: number
        description: Transaction amount
      description:
        type: string
        description: Transaction description
      account:
        type: string
        description: Account linked to transaction